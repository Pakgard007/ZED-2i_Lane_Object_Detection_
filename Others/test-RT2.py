import numpy as np
import cv2

# ----------------- 1Ô∏è‚É£ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Intrinsic Parameters -----------------
K = np.array([[537.679, 0, 635.247],  
              [0, 537.88, 360.651],  
              [0, 0, 1]])

# ----------------- 2Ô∏è‚É£ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Rotation ‡πÅ‡∏•‡∏∞ Translation ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏°‡∏≤ -----------------
R_left = np.array([[ 0.99963516,  0.02344795, -0.00409754],
                   [-0.00606465,  0.41676231,  0.90874696],
                   [ 0.0230085,  -0.90845591,  0.41673925]])

T_left = np.array([[-0.44385514],
                   [ 0.53549433],
                   [ 3.19085962]])

# ----------------- 3Ô∏è‚É£ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏∏‡∏î Checkerboard 6x4 (‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) -----------------
rows = 6  # ‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
cols = 4  # ‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
square_size = 0.20  # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Checkerboard (50 ‡∏°‡∏°. ‡∏´‡∏£‡∏∑‡∏≠ 5 ‡∏ã‡∏°.)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î 3D ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î
checkerboard_points = np.zeros((rows * cols, 3), dtype=np.float32)
checkerboard_points[:, :2] = np.mgrid[0:rows, 0:cols].T.reshape(-1, 2) * square_size

# ----------------- 4Ô∏è‚É£ ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏∏‡∏î 3D ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏†‡∏≤‡∏û 2D -----------------
projected_points, _ = cv2.projectPoints(checkerboard_points, cv2.Rodrigues(R_left)[0], T_left, K, None)

# ----------------- 5Ô∏è‚É£ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÑ‡∏î‡πâ -----------------
projected_points.reshape(-1, 2)

img = cv2.imread("edit-left05.jpg")  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
for p in projected_points:
    x, y = int(p[0][0]), int(p[0][1])
    cv2.circle(img, (x, y), 5, (0, 255, 0), -1)  # üîµ ‡∏ß‡∏≤‡∏î‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    
cv2.imshow("Projected Checkerboard - 6x4", img)
cv2.waitKey(0)
cv2.destroyAllWindows()

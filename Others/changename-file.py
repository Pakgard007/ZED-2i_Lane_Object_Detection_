import os
import json

# ‡∏û‡∏≤‡∏ò‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
input_folder = "/home/satoi/json-pp-finished"
output_folder = "/home/satoi/json-perfect"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
os.makedirs(output_folder, exist_ok=True)

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå JSON ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
json_files = [f for f in os.listdir(input_folder) if f.endswith('.json')]

if not json_files:
    print(f" ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå JSON ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {input_folder}")
    exit(1)

for json_file in json_files:
    input_json_path = os.path.join(input_folder, json_file)

    with open(input_json_path, 'r', encoding='utf-8') as f:
        try:
            data = json.load(f)
        except json.JSONDecodeError:
            print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {json_file} (‡πÑ‡∏ü‡∏•‡πå JSON ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢)")
            continue

    # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å JSON
    image_name = data.get("imagePath", "unknown.jpg")

    # ‡∏î‡∏∂‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û
    image_width = data.get("imageWidth", 1280)
    image_height = data.get("imageHeight", 720)

    # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö objects (bounding box)
    objects = []
    lanes = []
    drivable_area = []

    for shape in data.get("shapes", []):
        label = shape.get("label", "").lower()
        points = shape.get("points", [])

        if label in ["person", "car", "bus", "bike", "truck"]:  # ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà Object ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ bbox
            if len(points) == 2:
                bbox = [points[0][0], points[0][1], points[1][0], points[1][1]]
                objects.append({"category": label, "bbox": bbox, "mask": None})

        elif label == "lane":  # ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡∏ô
            lanes.append({"points": points})

        elif label == "drivable_area":  # ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà
            drivable_area.append({"points": points})

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á JSON ‡πÉ‡∏´‡∏°‡πà
    new_data = {
        "image": f"../captured_images/{image_name}",
        "image_width": image_width,
        "image_height": image_height,
        "objects": objects,
        "lanes": lanes,
        "drivable_area": drivable_area,
        "frames": [{"objects": []}]
    }

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå JSON ‡πÉ‡∏´‡∏°‡πà
    output_json_path = os.path.join(output_folder, json_file)
    with open(output_json_path, 'w', encoding='utf-8') as outfile:
        json.dump(new_data, outfile, indent=4)

    print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå: {output_json_path}")

print(f"\nüéâ ‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå JSON ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå! ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà {output_folder}")
